apiVersion: apps/v1
kind: Deployment
metadata:
  name: perfectltp-backend
  namespace: perfectltp
  labels:
    app: perfectltp-backend
    version: v1
    component: api
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app: perfectltp-backend
  template:
    metadata:
      labels:
        app: perfectltp-backend
        version: v1
        component: api
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "3001"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: perfectltp-backend-sa
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        runAsGroup: 1001
        fsGroup: 1001
      containers:
      - name: backend
        image: perfectltp/backend:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 3001
          name: http
          protocol: TCP
        env:
        - name: NODE_ENV
          value: "production"
        - name: PORT
          value: "3001"
        - name: AZURE_CLIENT_ID
          valueFrom:
            secretKeyRef:
              name: perfectltp-secrets
              key: azure-client-id
        - name: AZURE_TENANT_ID
          valueFrom:
            secretKeyRef:
              name: perfectltp-secrets
              key: azure-tenant-id
        - name: AZURE_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: perfectltp-secrets
              key: azure-client-secret
        - name: COSMOS_DB_ENDPOINT
          valueFrom:
            secretKeyRef:
              name: perfectltp-secrets
              key: cosmos-db-endpoint
        - name: COSMOS_DB_KEY
          valueFrom:
            secretKeyRef:
              name: perfectltp-secrets
              key: cosmos-db-key
        - name: AZURE_OPENAI_ENDPOINT
          valueFrom:
            secretKeyRef:
              name: perfectltp-secrets
              key: azure-openai-endpoint
        - name: AZURE_OPENAI_API_KEY
          valueFrom:
            secretKeyRef:
              name: perfectltp-secrets
              key: azure-openai-api-key
        - name: AZURE_STORAGE_CONNECTION_STRING
          valueFrom:
            secretKeyRef:
              name: perfectltp-secrets
              key: azure-storage-connection
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: perfectltp-secrets
              key: jwt-secret
        - name: SESSION_SECRET
          valueFrom:
            secretKeyRef:
              name: perfectltp-secrets
              key: session-secret
        - name: ENCRYPTION_KEY
          valueFrom:
            secretKeyRef:
              name: perfectltp-secrets
              key: encryption-key
        - name: REDIS_CONNECTION_STRING
          valueFrom:
            secretKeyRef:
              name: perfectltp-secrets
              key: redis-connection-string
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /api/health
            port: http
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
          successThreshold: 1
        readinessProbe:
          httpGet:
            path: /api/health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
          successThreshold: 1
        startupProbe:
          httpGet:
            path: /api/health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 10
          successThreshold: 1
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1001
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: logs
          mountPath: /app/logs
        - name: temp
          mountPath: /tmp
        - name: uploads
          mountPath: /app/uploads
      volumes:
      - name: logs
        emptyDir: {}
      - name: temp
        emptyDir: {}
      - name: uploads
        emptyDir: {}
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
      - key: "kubernetes.azure.com/scalesetpriority"
        operator: "Equal"
        value: "spot"
        effect: "NoSchedule"
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - perfectltp-backend
              topologyKey: kubernetes.io/hostname

---
apiVersion: v1
kind: Service
metadata:
  name: perfectltp-backend-service
  namespace: perfectltp
  labels:
    app: perfectltp-backend
    component: api
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 3001
    protocol: TCP
    name: http
  selector:
    app: perfectltp-backend

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: perfectltp-backend-sa
  namespace: perfectltp
  labels:
    app: perfectltp-backend
    component: api

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: perfectltp-backend-hpa
  namespace: perfectltp
  labels:
    app: perfectltp-backend
    component: api
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: perfectltp-backend
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60

---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: perfectltp-backend-pdb
  namespace: perfectltp
  labels:
    app: perfectltp-backend
    component: api
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: perfectltp-backend 