name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  lint:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Frontend - Install Dependencies
      working-directory: ./frontend
      run: npm ci
    
    - name: Frontend - Lint
      working-directory: ./frontend
      run: npm run lint
    
    - name: Backend - Install Dependencies
      working-directory: ./backend
      run: npm ci
    
    - name: Backend - Lint
      working-directory: ./backend
      run: npm run lint
  
  test:
    runs-on: ubuntu-latest
    needs: [lint]
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Frontend - Install Dependencies
      working-directory: ./frontend
      run: npm ci
    
    - name: Frontend - Run Tests
      working-directory: ./frontend
      run: |
        npm test > test-results.txt 2>&1

    - name: Upload Frontend Test Results
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: frontend-tests
        path: ./frontend/test-results.txt
    
    - name: Backend - Install Dependencies
      working-directory: ./backend
      run: npm ci
    
    - name: Backend - Run Tests
      working-directory: ./backend
      run: |
        npm test > test-results.txt 2>&1

    - name: Upload Backend Test Results
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: backend-tests
        path: ./backend/test-results.txt
  
  terraform-validate:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      
    - name: Terraform Init
      working-directory: ./infra
      run: terraform init -backend=false
      
    - name: Terraform Validate
      working-directory: ./infra
      run: terraform validate
      
  build-and-push:
    needs: [lint, test]
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Login to Azure Container Registry
      uses: docker/login-action@v2
      with:
        registry: lifetrackerdevacr.azurecr.io
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}
    
    - name: Build and push backend image
      uses: docker/build-push-action@v4
      with:
        context: ./backend
        file: ./backend/Dockerfile
        push: true
        tags: |
          lifetrackerdevacr.azurecr.io/backend:latest
          lifetrackerdevacr.azurecr.io/backend:${{ github.sha }}
        cache-from: type=registry,ref=lifetrackerdevacr.azurecr.io/backend:latest
        cache-to: type=inline
        
    - name: Build and push frontend image
      uses: docker/build-push-action@v4
      with:
        context: ./frontend
        file: ./frontend/Dockerfile
        push: true
        tags: |
          lifetrackerdevacr.azurecr.io/frontend:latest
          lifetrackerdevacr.azurecr.io/frontend:${{ github.sha }}
        cache-from: type=registry,ref=lifetrackerdevacr.azurecr.io/frontend:latest
        cache-to: type=inline 